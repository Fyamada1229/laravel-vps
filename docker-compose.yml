# Compose fileのバージョン指定
version: "3"

# どんなコンテナを立ち上げるか
services:
  # 既存のサービス
  # ---------------------------------
  # laravelを動かすコンテナ
  # ---------------------------------
  app:
    ports:
      - "80:80"
    build: ./docker/app
    container_name: laravel
    volumes:
      - ./src:/var/www/html

  # ----------------------------------
  # MySQLを動かすコンテナ
  # ----------------------------------
  db:
    image: mysql:5.7
    container_name: db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - 3306:3306

  # 追加するサービス
  # ----------------------------------
  # watchコマンドを使ってlaravelバッチを動かすコンテナ
  # ----------------------------------
  # laravel-watch:
  #   build: ./docker/app # 既存のappサービスと同じDockerfileを指定している
  #   container_name: laravel-watch
  #   volumes:
  #     - ./src:/var/www/html # 既存のappサービスと同じディレクトリをマウント
  #   command:
  #     ["watch", "-n", "60", "php /var/www/html/laravel/artisan reset:status"]
  #   environment:
  #     - TERM=xterm

  laravel-watch:
    build: ./docker/app
    container_name: laravel-watch
    volumes:
      - ./src:/var/www/html
      - ./scripts/run_daily_task.sh:/var/www/html/laravel/scripts/your-command.sh # こちらが重要
    command: ["bash", "/var/www/html/laravel/scripts/your-command.sh"] # こちらが重要
    environment:
      - TERM=xterm
      - TZ=Asia/Tokyo
